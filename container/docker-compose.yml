version: "3.3"

services:
  master:
    build: ../web
    container_name: sandbox-web
    ports:
      - 8084:8084
    depends_on:
      - sandbox_queue_worker_1
      - http_worker1
      - http_worker2
      - http_worker3
      - redis
  http_worker1:
    build:
      context: ../http_worker
    command:
      - uvicorn
      - main:app
      - --host
      - '0.0.0.0'
      - --port
      - '80'
    container_name: sandbox-http_worker-1
  http_worker2:
    build:
      context: ../http_worker
    command:
      - uvicorn
      - main:app
      - --host
      - '0.0.0.0'
      - --port
      - '81'
    container_name: sandbox-http_worker-2
  http_worker3:
    build:
      context: ../http_worker
    command:
      - uvicorn
      - main:app
      - --host
      - '0.0.0.0'
      - --port
      - '82'
    container_name: sandbox-http_worker-3
  sandbox_queue_worker_1:
    build:
      context: ../queue_worker
    command:
      - celery
      - --app
      - worker
      - worker
    container_name: queue_worker_1
    depends_on:
      - rabbitmq
  execution_persister:
    build:
      context: ../execution_persister
    command:
      - python3
      - -u
      - main.py
    depends_on:
      - redis
  redis:
    image: redis
    container_name: pub-sub-queue
    expose:
      - 6379
  rabbitmq:
    hostname: "mqueue"
    image: rabbitmq
    container_name: message-queue
    ports:
      - 5672:5672
      - 15672:15672
  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
volumes:
  db:
    driver: local
